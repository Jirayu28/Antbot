amcl:
  ros__parameters:
    use_sim_time: true

    # ==== Frames (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö TF ‡∏´‡∏∏‡πà‡∏ô) ====
    global_frame_id: map
    odom_frame_id: odom
    base_frame_id: base_link

    # ==== Laser / Scan ====
    scan_topic: /scan
    laser_frame_id: lidar_sensor_link
    laser_model_type: likelihood_field
    do_beamskip: true
    beam_skip_distance: 0.5
    beam_skip_threshold: 0.3
    # ‡∏Ñ‡πà‡∏≤‡∏à‡∏π‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏à‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
    z_hit: 0.8
    z_rand: 0.2
    sigma_hit: 0.2
    lambda_short: 0.1

    # ==== Odom noise ====
    alpha1: 0.05
    alpha2: 0.05
    alpha3: 0.05
    alpha4: 0.05
    alpha5: 0.05

    # ==== Particle filter ====
    min_particles: 500
    max_particles: 2000

    # ==== Update / Timing ====
    update_min_d: 0.15
    update_min_a: 0.15
    resample_interval: 2
    transform_tolerance: 0.7
    tf_broadcast: true

map_server:
  ros__parameters:
    use_sim_time: true
    # yaml_filename ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏ú‡πà‡∏≤‡∏ô launch

bt_navigator:
  ros__parameters:
    use_sim_time: true
    odom_topic: /odometry/filtered 

controller_server:
  ros__parameters:
    odom_topic: /odometry/filtered
    use_sim_time: true

    controller_plugins: ["FollowPath"]

    # ‡πÉ‡∏ä‡πâ Regulated Pure Pursuit (RPP)
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

      # ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß/‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á
      desired_linear_vel: 0.30
      min_lookahead_dist: 0.30
      max_lookahead_dist: 0.90
      lookahead_time: 1.5
      use_velocity_scaled_lookahead_dist: true
      transform_tolerance: 0.5
      allow_reversing: false

      # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏á + ‡πÄ‡∏û‡∏î‡∏≤‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏°‡∏∏‡∏°
      regulate_turning_speed: true
      max_angular_accel: 2.5
      max_angular_vel: 2.0

      # üîß ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏•‡πâ‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏ß
      use_rotate_to_heading: false      # ‡πÑ‡∏°‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏°‡∏∏‡∏ô‡∏´‡∏±‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà
      min_turning_radius: 0.77          # ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏£‡∏ñ‡∏à‡∏£‡∏¥‡∏á (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà ~0.7‚Äì0.8 m)

      # (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) ‡∏•‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ä‡∏∞‡∏á‡∏±‡∏Å‡πÉ‡∏Å‡∏•‡πâ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏
      regulate_linear_velocity: false
      use_cost_regulated_linear_velocity_scale: false
      # rotate_to_heading_angular_vel: 1.2  # ‡πÉ‡∏ä‡πâ‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î rotate_to_heading

    # Progress / Goal checker
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.60   # ‡∏ú‡πà‡∏≠‡∏ô‡∏°‡∏∏‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏à‡∏µ‡πâ‡πÄ‡∏õ‡πä‡∏∞‡∏à‡∏ô‡∏ä‡πâ‡∏≤
      stateful: true

planner_server:
  ros__parameters:
    use_sim_time: true
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false

smoother_server:
  ros__parameters:
    use_sim_time: true
    smoother_plugins: ["SimpleSmoother"]
    SimpleSmoother:
      plugin: "nav2_smoother::SimpleSmoother"

behavior_server:
  ros__parameters:
    use_sim_time: true
    odom_topic: /odometry/filtered
    behaviors: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"

waypoint_follower:
  ros__parameters:
    use_sim_time: true
    plugin_lib_names: ["nav2_waypoint_follower::WaypointFollower"]

global_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: map
    robot_base_frame: base_link

    # ‡∏£‡∏π‡∏õ‡∏£‡πà‡∏≤‡∏á‡∏´‡∏∏‡πà‡∏ô (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á: robot_radius ‡∏´‡∏£‡∏∑‡∏≠ footprint)
    robot_radius: 0.28

    track_unknown_space: true
    resolution: 0.05
    update_frequency: 5.0
    publish_frequency: 2.0
    transform_tolerance: 0.7
    rolling_window: false

    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_topic: map
      subscribe_to_updates: true

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        data_type: "LaserScan"
        max_obstacle_height: 2.0
        min_obstacle_height: 0.0
        obstacle_range: 8.0
        raytrace_range: 10.0
        clearing: true
        marking: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.6
      cost_scaling_factor: 3.0

local_costmap:
  ros__parameters:
    use_sim_time: true
    global_frame: odom
    robot_base_frame: base_link

    robot_radius: 0.28

    rolling_window: true
    width: 6.0
    height: 6.0
    resolution: 0.05
    update_frequency: 10.0
    publish_frequency: 5.0
    transform_tolerance: 0.7

    # local ‡πÑ‡∏°‡πà‡∏°‡∏µ static_layer
    plugins: ["obstacle_layer", "inflation_layer"]

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      observation_sources: scan
      scan:
        topic: /scan
        data_type: "LaserScan"
        max_obstacle_height: 2.0
        min_obstacle_height: 0.0
        obstacle_range: 8.0
        raytrace_range: 10.0
        clearing: true
        marking: true

    inflation_layer:
      plugin: "nav2_costmap_2d::InflationLayer"
      inflation_radius: 0.6
      cost_scaling_factor: 3.0