cmake_minimum_required(VERSION 3.8)
project(antbot_description)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# üîç Find dependencies
find_package(ament_cmake REQUIRED)

# üì¶ launch
install(DIRECTORY launch/
  DESTINATION share/${PROJECT_NAME}/launch
)

# üß© urdf/xacro (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á .xacro ‡πÅ‡∏•‡∏∞ .urdf ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
install(DIRECTORY urdf/
  DESTINATION share/${PROJECT_NAME}/urdf
  FILES_MATCHING
    PATTERN "*.xacro"
    PATTERN "*.urdf"
)

# üß± meshes (‡∏Å‡πá‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
install(DIRECTORY meshes/
  DESTINATION share/${PROJECT_NAME}/meshes
)

# üåç worlds (‡∏Å‡πá‡∏≠‡∏õ‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö asset ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ)
install(DIRECTORY worlds/
  DESTINATION share/${PROJECT_NAME}/worlds
)

# üß≠ rviz config (‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå rviz)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/rviz)
  install(DIRECTORY rviz/
    DESTINATION share/${PROJECT_NAME}/rviz
  )
endif()

# ‚úÖ tests (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_cpplint_FOUND TRUE)
  set(ament_cmake_copyright_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
